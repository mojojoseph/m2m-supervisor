#!/usr/bin/env node

var M2mProxy = require('../lib/m2m-proxy');
var RedisCheckpoint = require('../services/redis-checkpoint');
var ConfigCheckpoint = require('../services/config-checkpoint');
var RouteWatcher = require('../services/route-watcher');
var ModemWatcher = require('../services/modem-watcher');
var HeartbeatGenerator = require('../services/heartbeat-generator');

var schema = require('../lib/redis-schema');
var hashkeys = require('../lib/config-hashkeys');

var redisChk = new RedisCheckpoint().start(function(event,redis) {
    if (event !== 'ready') return;

    var configChk = new ConfigCheckpoint(redis,hashkeys.gateway).start(function(event,gateway) {
        if (event !== 'ready') return;

        gateway.imeiFound = function(imei){
            if (!gateway.imei) {
                proxy.gateway.imei = imei;
                gateway.imei = imei;
            }
            redis.hsetnx(schema.config.key,hashkeys.gateway.imei.key,imei);
        };
        
        var heartbeat = null;
        var modem = null;
        var proxy = new M2mProxy(redis,gateway);
        var route = new RouteWatcher(gateway).start(function(event){
            // TODO detect failure and stop the dependent objects... then restart on ready
            if (event == 'ready' && !modem) {
                modem = new ModemWatcher(gateway).start(function(event){
                    if (event == 'ready' && !heartbeat)
                        heartbeat = new HeartbeatGenerator(proxy).start();
                });
            }
        });
    });
    
});
