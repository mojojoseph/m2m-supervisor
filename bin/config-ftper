#!/usr/bin/env node

var _ = require('lodash');
var path = require('path');
var fs = require('fs');
var FTP = require('ftp');

var hashkeys = require('../lib/config-hashkeys');
var schema = require('../lib/redis-schema');
var setup = require('../lib/global-setup');

var ConfigWatcher = require('../services/config-watcher');
var RedisWatcher = require('../services/redis-watcher');

const TARGET_PATH = 'tmp/'; //'/etc/m2m-supervisor/';

var ftp = new FTP();

var configWatcher = new ConfigWatcher();
var redisWatcher = new RedisWatcher().addClientWatcher(configWatcher);
configWatcher.on('ready',function(hash){
    if (!hash) return;

    var deviceName = hash[hashkeys.gateway.imei];

    var missing = _.difference(['host','user','password'], _.keys(setup.setup.ftp));
    if (missing.length > 0) throw new Error('FTP config missing: ' + missing);

    ftp.on('error',function(error){
        console.log('error: ' + error);
        throw error;
    });
    ftp.on('ready', function () {
        ftp.list(function (err, list) {
            if (err)throw err;

            if (!fs.existsSync(TARGET_PATH)) fs.mkdirSync(TARGET_PATH);

            list.forEach(function (element, index, array) {
                console.log('element(' + index + '):' + JSON.stringify(element));
                if (element.type === 'd') {
                    return;
                }
                if(element.name.indexOf(deviceName) > -1 || element.name.toLowerCase().indexOf('default') > -1) {
                    console.log('getting ' + element.name);
                } else {
                    return;
                }

                ftp.get(element.name, function (err, stream) {
                    if (err) {
                        console.log('ftp error ' + err);
                        throw err;
                    }

                    stream.once('close', function () {
                        ftp.end();
                    });

                    stream.pipe(fs.createWriteStream(TARGET_PATH + element.name));
                });
            });

            ftp.logout(function(err) {
                console.log('logged out ' + err);
                redisWatcher.stop();
            });
        });
    });
    ftp.connect(setup.setup.ftp);
});
redisWatcher.start();

